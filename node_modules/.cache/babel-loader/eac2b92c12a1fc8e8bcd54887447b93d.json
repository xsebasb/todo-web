{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lkraz\\\\Desktop\\\\todo-web\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = ({\n  todos,\n  completeTodo,\n  removerTodo,\n  actualizarTodo\n}) => {\n  _s();\n\n  const [editar, setEditar] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    actualizarTodo(editar.id, value);\n    setEditar({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (editar.id) {\n    return /*#__PURE__*/_jsxDEV(TodoForm, {\n      editar: editar,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"iconos\",\n      children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => removerTodo(todo.id),\n        className: \"remover-icono\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaUserEdit, {\n        onClick: () => setEditar({\n          id: todo.id,\n          value: todo.text\n        }),\n        className: \"editar-icono\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this));\n};\n\n_s(Todo, \"S6HmL0n7XpEbD2Lv7lXYs1yr06w=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/lkraz/Desktop/todo-web/src/components/Todo.js"],"names":["React","useState","TodoForm","RiCloseCircleLine","TiEdit","Todo","todos","completeTodo","removerTodo","actualizarTodo","editar","setEditar","id","value","submitUpdate","map","todo","index","isComplete","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,MAAT,QAAuB,gBAAvB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,YAAT;AAAuBC,EAAAA,WAAvB;AAAoCC,EAAAA;AAApC,CAAD,KAA0D;AAAA;;AACrE,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC;AACnCW,IAAAA,EAAE,EAAE,IAD+B;AAEnCC,IAAAA,KAAK,EAAE;AAF4B,GAAD,CAApC;;AAKA,QAAMC,YAAY,GAAGD,KAAK,IAAI;AAC5BJ,IAAAA,cAAc,CAACC,MAAM,CAACE,EAAR,EAAYC,KAAZ,CAAd;AACAF,IAAAA,SAAS,CAAC;AACRC,MAAAA,EAAE,EAAE,IADI;AAERC,MAAAA,KAAK,EAAE;AAFC,KAAD,CAAT;AAID,GAND;;AAQA,MAAIH,MAAM,CAACE,EAAX,EAAe;AACb,wBAAO,QAAC,QAAD;AAAU,MAAA,MAAM,EAAEF,MAAlB;AAA0B,MAAA,QAAQ,EAAEI;AAApC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,SAAOR,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACf;AACE,IAAA,SAAS,EAAED,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAAwC,UADrD;AAAA,4BAIE;AAAmB,MAAA,OAAO,EAAE,MAAMX,YAAY,CAACS,IAAI,CAACJ,EAAN,CAA9C;AAAA,gBACGI,IAAI,CAACG;AADR,OAAUH,IAAI,CAACJ,EAAf;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE,QAAC,iBAAD;AACE,QAAA,OAAO,EAAE,MAAMJ,WAAW,CAACQ,IAAI,CAACJ,EAAN,CAD5B;AAEE,QAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,UAAD;AACE,QAAA,OAAO,EAAE,MAAMD,SAAS,CAAC;AAAEC,UAAAA,EAAE,EAAEI,IAAI,CAACJ,EAAX;AAAeC,UAAAA,KAAK,EAAEG,IAAI,CAACG;AAA3B,SAAD,CAD1B;AAEE,QAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,KAEOF,KAFP;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAoBD,CAtCD;;GAAMZ,I;;KAAAA,I;AAwCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nconst Todo = ({ todos, completeTodo, removerTodo, actualizarTodo }) => {\n  const [editar, setEditar] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    actualizarTodo(editar.id, value);\n    setEditar({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (editar.id) {\n    return <TodoForm editar={editar} onSubmit={submitUpdate} />;\n  }\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\n      key={index}\n    >\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n      <div className='iconos'>\n        <RiCloseCircleLine\n          onClick={() => removerTodo(todo.id)}\n          className='remover-icono'\n        />\n        <FaUserEdit\n          onClick={() => setEditar({ id: todo.id, value: todo.text })}\n          className='editar-icono'\n        />\n      </div>\n    </div>\n  ));\n};\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}